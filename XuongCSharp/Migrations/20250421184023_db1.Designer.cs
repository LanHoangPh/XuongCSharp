// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using XuongCSharp.DataAccess.Data;

#nullable disable

namespace XuongCSharp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250421184023_db1")]
    partial class db1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("XuongCSharp.DataAccess.Entities.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("LastModifiedDate")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("department", "dbo");
                });

            modelBuilder.Entity("XuongCSharp.DataAccess.Entities.DepartmentFacility", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("CreatedDate")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("IdDepartment")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdFacility")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdStaff")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("LastModifiedDate")
                        .HasColumnType("bigint");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("IdDepartment");

                    b.HasIndex("IdFacility");

                    b.HasIndex("IdStaff");

                    b.ToTable("department_facility", "dbo");
                });

            modelBuilder.Entity("XuongCSharp.DataAccess.Entities.Facility", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("LastModifiedDate")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("facility", "dbo");
                });

            modelBuilder.Entity("XuongCSharp.DataAccess.Entities.Major", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("LastModifiedDate")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("major", "dbo");
                });

            modelBuilder.Entity("XuongCSharp.DataAccess.Entities.MajorFacility", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("CreatedDate")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("IdDepartmentFacility")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdMajor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("LastModifiedDate")
                        .HasColumnType("bigint");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("IdDepartmentFacility");

                    b.HasIndex("IdMajor");

                    b.ToTable("major_facility", "dbo");
                });

            modelBuilder.Entity("XuongCSharp.DataAccess.Entities.Staff", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountFe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountFpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("LastModifiedDate")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("staff", "dbo");
                });

            modelBuilder.Entity("XuongCSharp.DataAccess.Entities.StaffMajorFacility", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("CreatedDate")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("IdMajorFacility")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdStaff")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("LastModifiedDate")
                        .HasColumnType("bigint");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("IdMajorFacility");

                    b.HasIndex("IdStaff");

                    b.ToTable("staff_major_facility", "dbo");
                });

            modelBuilder.Entity("XuongCSharp.DataAccess.Entities.DepartmentFacility", b =>
                {
                    b.HasOne("XuongCSharp.DataAccess.Entities.Department", "Department")
                        .WithMany("DepartmentFacilities")
                        .HasForeignKey("IdDepartment")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("XuongCSharp.DataAccess.Entities.Facility", "Facility")
                        .WithMany("DepartmentFacilities")
                        .HasForeignKey("IdFacility")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("XuongCSharp.DataAccess.Entities.Staff", "Staff")
                        .WithMany("DepartmentFacilities")
                        .HasForeignKey("IdStaff")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Department");

                    b.Navigation("Facility");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("XuongCSharp.DataAccess.Entities.MajorFacility", b =>
                {
                    b.HasOne("XuongCSharp.DataAccess.Entities.DepartmentFacility", "DepartmentFacility")
                        .WithMany("MajorFacilities")
                        .HasForeignKey("IdDepartmentFacility")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("XuongCSharp.DataAccess.Entities.Major", "Major")
                        .WithMany("MajorFacilities")
                        .HasForeignKey("IdMajor")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("DepartmentFacility");

                    b.Navigation("Major");
                });

            modelBuilder.Entity("XuongCSharp.DataAccess.Entities.StaffMajorFacility", b =>
                {
                    b.HasOne("XuongCSharp.DataAccess.Entities.MajorFacility", "MajorFacility")
                        .WithMany("StaffMajorFacilities")
                        .HasForeignKey("IdMajorFacility")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("XuongCSharp.DataAccess.Entities.Staff", "Staff")
                        .WithMany("StaffMajorFacilities")
                        .HasForeignKey("IdStaff")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("MajorFacility");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("XuongCSharp.DataAccess.Entities.Department", b =>
                {
                    b.Navigation("DepartmentFacilities");
                });

            modelBuilder.Entity("XuongCSharp.DataAccess.Entities.DepartmentFacility", b =>
                {
                    b.Navigation("MajorFacilities");
                });

            modelBuilder.Entity("XuongCSharp.DataAccess.Entities.Facility", b =>
                {
                    b.Navigation("DepartmentFacilities");
                });

            modelBuilder.Entity("XuongCSharp.DataAccess.Entities.Major", b =>
                {
                    b.Navigation("MajorFacilities");
                });

            modelBuilder.Entity("XuongCSharp.DataAccess.Entities.MajorFacility", b =>
                {
                    b.Navigation("StaffMajorFacilities");
                });

            modelBuilder.Entity("XuongCSharp.DataAccess.Entities.Staff", b =>
                {
                    b.Navigation("DepartmentFacilities");

                    b.Navigation("StaffMajorFacilities");
                });
#pragma warning restore 612, 618
        }
    }
}
