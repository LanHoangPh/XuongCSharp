// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using XuongCSharp.DataAccess.Data;

#nullable disable

namespace XuongCSharp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("XuongCSharp.DataAccess.Entities.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("LastModifiedDate")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("department", "dbo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440020"),
                            Code = "DEP001",
                            CreatedDate = 1627849200000L,
                            LastModifiedDate = 1627935600000L,
                            Name = "Department One",
                            Status = (byte)1
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440021"),
                            Code = "DEP002",
                            CreatedDate = 1627849200000L,
                            LastModifiedDate = 1627935600000L,
                            Name = "Department Two",
                            Status = (byte)1
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440022"),
                            Code = "DEP003",
                            CreatedDate = 1627849200000L,
                            LastModifiedDate = 1627935600000L,
                            Name = "Department Three",
                            Status = (byte)1
                        });
                });

            modelBuilder.Entity("XuongCSharp.DataAccess.Entities.DepartmentFacility", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("CreatedDate")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("IdDepartment")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdFacility")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdStaff")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("LastModifiedDate")
                        .HasColumnType("bigint");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("IdDepartment");

                    b.HasIndex("IdFacility");

                    b.HasIndex("IdStaff");

                    b.ToTable("department_facility", "dbo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440030"),
                            CreatedDate = 1627849200000L,
                            IdDepartment = new Guid("550e8400-e29b-41d4-a716-446655440020"),
                            IdFacility = new Guid("550e8400-e29b-41d4-a716-446655440010"),
                            IdStaff = new Guid("550e8400-e29b-41d4-a716-446655440000"),
                            LastModifiedDate = 1627935600000L,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440031"),
                            CreatedDate = 1627849200000L,
                            IdDepartment = new Guid("550e8400-e29b-41d4-a716-446655440021"),
                            IdFacility = new Guid("550e8400-e29b-41d4-a716-446655440011"),
                            IdStaff = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            LastModifiedDate = 1627935600000L,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440032"),
                            CreatedDate = 1627849200000L,
                            IdDepartment = new Guid("550e8400-e29b-41d4-a716-446655440022"),
                            IdFacility = new Guid("550e8400-e29b-41d4-a716-446655440011"),
                            IdStaff = new Guid("550e8400-e29b-41d4-a716-446655440002"),
                            LastModifiedDate = 1627935600000L,
                            Status = (byte)1
                        });
                });

            modelBuilder.Entity("XuongCSharp.DataAccess.Entities.Facility", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("LastModifiedDate")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("facility", "dbo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440010"),
                            Code = "FAC001",
                            CreatedDate = 1627849200000L,
                            LastModifiedDate = 1627935600000L,
                            Name = "HN",
                            Status = (byte)1
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440011"),
                            Code = "FAC002",
                            CreatedDate = 1627849200000L,
                            LastModifiedDate = 1627935600000L,
                            Name = "HCM",
                            Status = (byte)1
                        });
                });

            modelBuilder.Entity("XuongCSharp.DataAccess.Entities.ImportLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FailCount")
                        .HasColumnType("int");

                    b.Property<long>("ImportDate")
                        .HasColumnType("bigint");

                    b.Property<string>("PerformedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SuccessCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("import_log", "dbo");
                });

            modelBuilder.Entity("XuongCSharp.DataAccess.Entities.ImportLogDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ImportLogId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RowData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ImportLogId");

                    b.ToTable("import_log_detail", "dbo");
                });

            modelBuilder.Entity("XuongCSharp.DataAccess.Entities.Major", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("LastModifiedDate")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("major", "dbo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440040"),
                            Code = "MAJ001",
                            CreatedDate = 1627849200000L,
                            LastModifiedDate = 1627935600000L,
                            Name = "Major One",
                            Status = (byte)1
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440041"),
                            Code = "MAJ002",
                            CreatedDate = 1627849200000L,
                            LastModifiedDate = 1627935600000L,
                            Name = "Major Two",
                            Status = (byte)1
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440042"),
                            Code = "MAJ003",
                            CreatedDate = 1627849200000L,
                            LastModifiedDate = 1627935600000L,
                            Name = "Major Three",
                            Status = (byte)1
                        });
                });

            modelBuilder.Entity("XuongCSharp.DataAccess.Entities.MajorFacility", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("CreatedDate")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("IdDepartmentFacility")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdMajor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("LastModifiedDate")
                        .HasColumnType("bigint");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("IdDepartmentFacility");

                    b.HasIndex("IdMajor");

                    b.ToTable("major_facility", "dbo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440050"),
                            CreatedDate = 1627849200000L,
                            IdDepartmentFacility = new Guid("550e8400-e29b-41d4-a716-446655440030"),
                            IdMajor = new Guid("550e8400-e29b-41d4-a716-446655440040"),
                            LastModifiedDate = 1627935600000L,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440051"),
                            CreatedDate = 1627849200000L,
                            IdDepartmentFacility = new Guid("550e8400-e29b-41d4-a716-446655440031"),
                            IdMajor = new Guid("550e8400-e29b-41d4-a716-446655440041"),
                            LastModifiedDate = 1627935600000L,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440052"),
                            CreatedDate = 1627849200000L,
                            IdDepartmentFacility = new Guid("550e8400-e29b-41d4-a716-446655440032"),
                            IdMajor = new Guid("550e8400-e29b-41d4-a716-446655440042"),
                            LastModifiedDate = 1627935600000L,
                            Status = (byte)1
                        });
                });

            modelBuilder.Entity("XuongCSharp.DataAccess.Entities.Staff", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountFe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountFpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("LastModifiedDate")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("staff", "dbo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440000"),
                            AccountFe = "fe_account1@fe.edu.vn",
                            AccountFpt = "fpt_account1@fpt.edu.vn",
                            CreatedDate = 1627849200000L,
                            LastModifiedDate = 1627935600000L,
                            Name = "John wick",
                            StaffCode = "ST001",
                            Status = (byte)1
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            AccountFe = "fe_account2@fe.edu.vn",
                            AccountFpt = "fpt_account2@fpt.edu.vn",
                            CreatedDate = 1627849200000L,
                            LastModifiedDate = 1627935600000L,
                            Name = "Top1 Flo",
                            StaffCode = "ST002",
                            Status = (byte)1
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440002"),
                            AccountFe = "fe_account3@fe.edu.vn",
                            AccountFpt = "fpt_account3@fpt.edu.vn",
                            CreatedDate = 1627849200000L,
                            LastModifiedDate = 1627935600000L,
                            Name = "Lục Luật",
                            StaffCode = "ST003",
                            Status = (byte)1
                        });
                });

            modelBuilder.Entity("XuongCSharp.DataAccess.Entities.StaffMajorFacility", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("CreatedDate")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("IdMajorFacility")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdStaff")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("LastModifiedDate")
                        .HasColumnType("bigint");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("IdMajorFacility");

                    b.HasIndex("IdStaff");

                    b.ToTable("staff_major_facility", "dbo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440060"),
                            CreatedDate = 1627849200000L,
                            IdMajorFacility = new Guid("550e8400-e29b-41d4-a716-446655440050"),
                            IdStaff = new Guid("550e8400-e29b-41d4-a716-446655440000"),
                            LastModifiedDate = 1627935600000L,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440061"),
                            CreatedDate = 1627849200000L,
                            IdMajorFacility = new Guid("550e8400-e29b-41d4-a716-446655440051"),
                            IdStaff = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            LastModifiedDate = 1627935600000L,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440062"),
                            CreatedDate = 1627849200000L,
                            IdMajorFacility = new Guid("550e8400-e29b-41d4-a716-446655440052"),
                            IdStaff = new Guid("550e8400-e29b-41d4-a716-446655440002"),
                            LastModifiedDate = 1627935600000L,
                            Status = (byte)1
                        });
                });

            modelBuilder.Entity("XuongCSharp.DataAccess.Entities.StaffStatusLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("LoggedDate")
                        .HasColumnType("bigint");

                    b.Property<byte>("NewStatus")
                        .HasColumnType("tinyint");

                    b.Property<byte>("OldStatus")
                        .HasColumnType("tinyint");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StaffId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.ToTable("staff_status_log", "dbo");
                });

            modelBuilder.Entity("XuongCSharp.DataAccess.Entities.DepartmentFacility", b =>
                {
                    b.HasOne("XuongCSharp.DataAccess.Entities.Department", "Department")
                        .WithMany("DepartmentFacilities")
                        .HasForeignKey("IdDepartment")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("XuongCSharp.DataAccess.Entities.Facility", "Facility")
                        .WithMany("DepartmentFacilities")
                        .HasForeignKey("IdFacility")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("XuongCSharp.DataAccess.Entities.Staff", "Staff")
                        .WithMany("DepartmentFacilities")
                        .HasForeignKey("IdStaff")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Department");

                    b.Navigation("Facility");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("XuongCSharp.DataAccess.Entities.ImportLogDetail", b =>
                {
                    b.HasOne("XuongCSharp.DataAccess.Entities.ImportLog", "ImportLog")
                        .WithMany("ImportLogDetails")
                        .HasForeignKey("ImportLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ImportLog");
                });

            modelBuilder.Entity("XuongCSharp.DataAccess.Entities.MajorFacility", b =>
                {
                    b.HasOne("XuongCSharp.DataAccess.Entities.DepartmentFacility", "DepartmentFacility")
                        .WithMany("MajorFacilities")
                        .HasForeignKey("IdDepartmentFacility")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("XuongCSharp.DataAccess.Entities.Major", "Major")
                        .WithMany("MajorFacilities")
                        .HasForeignKey("IdMajor")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("DepartmentFacility");

                    b.Navigation("Major");
                });

            modelBuilder.Entity("XuongCSharp.DataAccess.Entities.StaffMajorFacility", b =>
                {
                    b.HasOne("XuongCSharp.DataAccess.Entities.MajorFacility", "MajorFacility")
                        .WithMany("StaffMajorFacilities")
                        .HasForeignKey("IdMajorFacility")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("XuongCSharp.DataAccess.Entities.Staff", "Staff")
                        .WithMany("StaffMajorFacilities")
                        .HasForeignKey("IdStaff")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("MajorFacility");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("XuongCSharp.DataAccess.Entities.StaffStatusLog", b =>
                {
                    b.HasOne("XuongCSharp.DataAccess.Entities.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("XuongCSharp.DataAccess.Entities.Department", b =>
                {
                    b.Navigation("DepartmentFacilities");
                });

            modelBuilder.Entity("XuongCSharp.DataAccess.Entities.DepartmentFacility", b =>
                {
                    b.Navigation("MajorFacilities");
                });

            modelBuilder.Entity("XuongCSharp.DataAccess.Entities.Facility", b =>
                {
                    b.Navigation("DepartmentFacilities");
                });

            modelBuilder.Entity("XuongCSharp.DataAccess.Entities.ImportLog", b =>
                {
                    b.Navigation("ImportLogDetails");
                });

            modelBuilder.Entity("XuongCSharp.DataAccess.Entities.Major", b =>
                {
                    b.Navigation("MajorFacilities");
                });

            modelBuilder.Entity("XuongCSharp.DataAccess.Entities.MajorFacility", b =>
                {
                    b.Navigation("StaffMajorFacilities");
                });

            modelBuilder.Entity("XuongCSharp.DataAccess.Entities.Staff", b =>
                {
                    b.Navigation("DepartmentFacilities");

                    b.Navigation("StaffMajorFacilities");
                });
#pragma warning restore 612, 618
        }
    }
}
